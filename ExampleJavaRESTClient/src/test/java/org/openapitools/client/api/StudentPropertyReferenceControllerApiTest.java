/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CollectionModelObject;
import org.openapitools.client.model.EntityModelCourse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StudentPropertyReferenceControllerApi
 */
@Disabled
public class StudentPropertyReferenceControllerApiTest {

    private final StudentPropertyReferenceControllerApi api = new StudentPropertyReferenceControllerApi();

    /**
     * patch-course-by-student-Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPropertyReferenceStudentPatchTest() throws ApiException {
        String id = null;
        CollectionModelObject collectionModelObject = null;
        EntityModelCourse response = api.createPropertyReferenceStudentPatch(id, collectionModelObject);
        // TODO: test validations
    }

    /**
     * update-course-by-student-Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPropertyReferenceStudentPutTest() throws ApiException {
        String id = null;
        CollectionModelObject collectionModelObject = null;
        EntityModelCourse response = api.createPropertyReferenceStudentPut(id, collectionModelObject);
        // TODO: test validations
    }

    /**
     * delete-course-by-student-Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePropertyReferenceIdStudentDeleteTest() throws ApiException {
        String id = null;
        String propertyId = null;
        api.deletePropertyReferenceIdStudentDelete(id, propertyId);
        // TODO: test validations
    }

    /**
     * delete-course-by-student-Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePropertyReferenceStudentDeleteTest() throws ApiException {
        String id = null;
        api.deletePropertyReferenceStudentDelete(id);
        // TODO: test validations
    }

    /**
     * get-course-by-student-Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void followPropertyReferenceStudentGetTest() throws ApiException {
        String id = null;
        String propertyId = null;
        EntityModelCourse response = api.followPropertyReferenceStudentGet(id, propertyId);
        // TODO: test validations
    }

    /**
     * get-course-by-student-Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void followPropertyReferenceStudentGet1Test() throws ApiException {
        String id = null;
        EntityModelCourse response = api.followPropertyReferenceStudentGet1(id);
        // TODO: test validations
    }

}
