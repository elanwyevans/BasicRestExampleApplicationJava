/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CourseRequestBody;
import org.openapitools.client.model.EntityModelCourse;
import org.openapitools.client.model.PagedModelEntityModelCourse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CourseEntityControllerApi
 */
@Disabled
public class CourseEntityControllerApiTest {

    private final CourseEntityControllerApi api = new CourseEntityControllerApi();

    /**
     * delete-course
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemResourceCourseDeleteTest() throws ApiException {
        String id = null;
        api.deleteItemResourceCourseDelete(id);
        // TODO: test validations
    }

    /**
     * get-course
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCollectionResourceCourseGet1Test() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PagedModelEntityModelCourse response = api.getCollectionResourceCourseGet1(page, size, sort);
        // TODO: test validations
    }

    /**
     * get-course
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemResourceCourseGetTest() throws ApiException {
        String id = null;
        EntityModelCourse response = api.getItemResourceCourseGet(id);
        // TODO: test validations
    }

    /**
     * patch-course
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchItemResourceCoursePatchTest() throws ApiException {
        String id = null;
        CourseRequestBody courseRequestBody = null;
        EntityModelCourse response = api.patchItemResourceCoursePatch(id, courseRequestBody);
        // TODO: test validations
    }

    /**
     * create-course
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCollectionResourceCoursePostTest() throws ApiException {
        CourseRequestBody courseRequestBody = null;
        EntityModelCourse response = api.postCollectionResourceCoursePost(courseRequestBody);
        // TODO: test validations
    }

    /**
     * update-course
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putItemResourceCoursePutTest() throws ApiException {
        String id = null;
        CourseRequestBody courseRequestBody = null;
        EntityModelCourse response = api.putItemResourceCoursePut(id, courseRequestBody);
        // TODO: test validations
    }

}
