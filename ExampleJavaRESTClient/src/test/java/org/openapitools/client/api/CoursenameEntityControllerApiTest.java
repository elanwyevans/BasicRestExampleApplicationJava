/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CoursenameRequestBody;
import org.openapitools.client.model.EntityModelCoursename;
import org.openapitools.client.model.PagedModelEntityModelCoursename;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CoursenameEntityControllerApi
 */
@Disabled
public class CoursenameEntityControllerApiTest {

    private final CoursenameEntityControllerApi api = new CoursenameEntityControllerApi();

    /**
     * delete-coursename
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemResourceCoursenameDeleteTest() throws ApiException {
        String id = null;
        api.deleteItemResourceCoursenameDelete(id);
        // TODO: test validations
    }

    /**
     * get-coursename
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCollectionResourceCoursenameGet1Test() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        PagedModelEntityModelCoursename response = api.getCollectionResourceCoursenameGet1(page, size, sort);
        // TODO: test validations
    }

    /**
     * get-coursename
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItemResourceCoursenameGetTest() throws ApiException {
        String id = null;
        EntityModelCoursename response = api.getItemResourceCoursenameGet(id);
        // TODO: test validations
    }

    /**
     * patch-coursename
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchItemResourceCoursenamePatchTest() throws ApiException {
        String id = null;
        CoursenameRequestBody coursenameRequestBody = null;
        EntityModelCoursename response = api.patchItemResourceCoursenamePatch(id, coursenameRequestBody);
        // TODO: test validations
    }

    /**
     * create-coursename
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCollectionResourceCoursenamePostTest() throws ApiException {
        CoursenameRequestBody coursenameRequestBody = null;
        EntityModelCoursename response = api.postCollectionResourceCoursenamePost(coursenameRequestBody);
        // TODO: test validations
    }

    /**
     * update-coursename
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putItemResourceCoursenamePutTest() throws ApiException {
        String id = null;
        CoursenameRequestBody coursenameRequestBody = null;
        EntityModelCoursename response = api.putItemResourceCoursenamePut(id, coursenameRequestBody);
        // TODO: test validations
    }

}
